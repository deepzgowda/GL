AWSTemplateFormatVersion: "2010-09-09"
Description: "ECS Auto Scaling based on Memory CloudFormation Template"

Parameters:
  ClusterName:
    Type: String
    Description: "Name of the ECS cluster"
  
  DesiredCapacity:
    Type: Number
    Description: "Desired number of EC2 instances in the Auto Scaling Group"
    Default: 2

  MaxCapacity:
    Type: Number
    Description: "Maximum number of EC2 instances in the Auto Scaling Group"
    Default: 4

  MinCapacity:
    Type: Number
    Description: "Minimum number of EC2 instances in the Auto Scaling Group"
    Default: 1

  MemoryThreshold:
    Type: Number
    Description: "Memory threshold percentage to trigger scaling (e.g., 80 for 80%)"
    Default: 80

Resources:
  ECSAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-AutoScalingGroup"
      DesiredCapacity: !Ref DesiredCapacity
      MaxSize: !Ref MaxCapacity
      MinSize: !Ref MinCapacity
      VPCZoneIdentifier: !Ref ECSSubnetIds
      LaunchConfigurationName: !Ref EC2LaunchConfig
      Tags:
        - Key: "Name"
          Value: !Sub "${AWS::StackName}-EC2Instance"
          PropagateAtLaunch: true

  EC2LaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: "ami-xxxxxxxxxxxxxxxxx" # Specify your ECS optimized AMI ID
      InstanceType: "t2.micro" # Choose an appropriate instance type
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData: !Base64 |
        #!/bin/bash
        echo ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config
      SecurityGroups:
        - !Ref EC2SecurityGroup
      KeyName: "YourKeyPair" # Specify your key pair
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize: 30

  EC2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref EC2Role

  EC2Role:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "ecs-autoscaling-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ecs:UpdateService"
                  - "ecs:DescribeServices"
                Resource: "*"

  EC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow inbound traffic to ECS instances"
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 32768
          ToPort: 65535
          SourceSecurityGroupId: !Ref EC2SecurityGroup
        - IpProtocol: "udp"
          FromPort: 32768
          ToPort: 65535
          SourceSecurityGroupId: !Ref EC2SecurityGroup

  MemoryHighScalingPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: !Ref ECSAutoScalingGroup
      PolicyType: "TargetTrackingScaling"
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: "ASGAverageNetworkIn"
        TargetValue: !Ref MemoryThreshold

Outputs:
  ECSAutoScalingGroup:
    Description: "ECS Auto Scaling Group Name"
    Value: !Ref ECSAutoScalingGroup
